static_resources:
  listeners:
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 8081
    per_connection_buffer_limit_bytes: 32768 # 32 KiB
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          codec_type: auto
          stat_prefix: ingress_http
          common_http_protocol_options:
            idle_timeout: 310s
          route_config:
            name: local_route
            virtual_hosts:
            - name: backend
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/postme"
                route:
                  cluster: node-server-http
          http_filters:
          #- name: envoy.filters.http.tap
          #  typed_config:
          #    "@type": type.googleapis.com/envoy.extensions.filters.http.tap.v3.Tap
          #    common_config:
          #      static_config:
          #        match:
          #          any_match: true
          #        output_config:
          #          max_buffered_rx_bytes: 1048576
          #          max_buffered_tx_bytes: 1048576
          #          sinks:
          #            - format: JSON_BODY_AS_STRING
          #              file_per_tap:
          #                path_prefix: /taps/tap
          - name: envoy.filters.http.router
            typed_config: {}
          access_log:
          - name: envoy.access_loggers.file
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
              path: "/dev/stdout"
              log_format:
                json_format:
                  type: ACCESS
                  time_date: "%START_TIME%"
                  x-request-id: "%REQ(X-REQUEST-ID)%"
                  x-global-transaction-id: "%RESP(X-GLOBAL-TRANSACTION-ID)%"
                  host: "%REQ(:AUTHORITY)%"
                  method: "%REQ(:METHOD)%"
                  bytes-received: "%BYTES_RECEIVED%"
                  path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
                  upstream-path: "%REQ(:PATH)%"
                  status: "%RESPONSE_CODE%"
                  status-details: "%RESPONSE_CODE_DETAILS%"
                  response-flags: "%RESPONSE_FLAGS%"
                  duration: "%DURATION%"
                  request-duration: "%REQUEST_DURATION%"
                  response-duration: "%RESPONSE_DURATION%"
                  response-tx-duration: "%RESPONSE_TX_DURATION%"
                  bytes-sent: "%BYTES_SENT%"
                  x-watson-userinfo: "%REQ(X-WATSON-USERINFO)%"
                  upstream-cluster: "%UPSTREAM_CLUSTER%"
                  upstream-host: "%UPSTREAM_HOST%"
                  upstream-tls-fail: "%UPSTREAM_TRANSPORT_FAILURE_REASON%"
                  x-forwarded-for: "%REQ(X-FORWARDED-FOR)%"
                  content-length-header: "%REQ(CONTENT-LENGTH)%"
                  connection-termination-details: "%CONNECTION_TERMINATION_DETAILS%"
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 8444
    # THIS LINE BREAKS THINGS. But it is recommended for untrusted downstreams. The default value is 1MiB
    per_connection_buffer_limit_bytes: 32768 # 32 KiB
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          codec_type: auto
          stat_prefix: ingress_http
          common_http_protocol_options:
            idle_timeout: 310s
          route_config:
            name: local_route
            virtual_hosts:
            - name: backend
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/postme"
                route:
                  cluster: node-server-https
          http_filters:
          #- name: envoy.filters.http.tap
          #  typed_config:
          #    "@type": type.googleapis.com/envoy.extensions.filters.http.tap.v3.Tap
          #    common_config:
          #      static_config:
          #        match:
          #          any_match: true
          #        output_config:
          #          max_buffered_rx_bytes: 1048576
          #          max_buffered_tx_bytes: 1048576
          #          sinks:
          #            - format: JSON_BODY_AS_STRING
          #              file_per_tap:
          #                path_prefix: /taps/tap
          - name: envoy.filters.http.router
            typed_config: {}
          access_log:
          - name: envoy.access_loggers.file
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
              path: "/dev/stdout"
              log_format:
                json_format:
                  type: ACCESS
                  time_date: "%START_TIME%"
                  x-request-id: "%REQ(X-REQUEST-ID)%"
                  x-global-transaction-id: "%RESP(X-GLOBAL-TRANSACTION-ID)%"
                  host: "%REQ(:AUTHORITY)%"
                  method: "%REQ(:METHOD)%"
                  bytes-received: "%BYTES_RECEIVED%"
                  path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
                  upstream-path: "%REQ(:PATH)%"
                  status: "%RESPONSE_CODE%"
                  status-details: "%RESPONSE_CODE_DETAILS%"
                  response-flags: "%RESPONSE_FLAGS%"
                  duration: "%DURATION%"
                  request-duration: "%REQUEST_DURATION%"
                  response-duration: "%RESPONSE_DURATION%"
                  response-tx-duration: "%RESPONSE_TX_DURATION%"
                  bytes-sent: "%BYTES_SENT%"
                  x-watson-userinfo: "%REQ(X-WATSON-USERINFO)%"
                  upstream-cluster: "%UPSTREAM_CLUSTER%"
                  upstream-host: "%UPSTREAM_HOST%"
                  upstream-tls-fail: "%UPSTREAM_TRANSPORT_FAILURE_REASON%"
                  x-forwarded-for: "%REQ(X-FORWARDED-FOR)%"
                  content-length-header: "%REQ(CONTENT-LENGTH)%"
                  connection-termination-details: "%CONNECTION_TERMINATION_DETAILS%"

      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
          common_tls_context:
            tls_certificates:
              # The following self-signed certificate pair is generated using:
              # $ openssl req -x509 -newkey rsa:2048 -keyout envoy-key.pem -out  envoy-crt.pem -days 3650 -nodes -subj '/CN=envoy'
              #
              # Instead of feeding it as an inline_string, certificate pair can also be fed to Envoy
              # via filename. Reference: https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/core/v3/base.proto#config-core-v3-datasource.
              #
              # Or in a dynamic configuration scenario, certificate pair can be fetched remotely via
              # Secret Discovery Service (SDS). Reference: https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret.
              certificate_chain:
                inline_string: |
                  -----BEGIN CERTIFICATE-----
                  MIICnDCCAYQCCQDPp8cH5b86ajANBgkqhkiG9w0BAQsFADAQMQ4wDAYDVQQDDAVl
                  bnZveTAeFw0yMDEwMzExMDQxMTlaFw0zMDEwMjkxMDQxMTlaMBAxDjAMBgNVBAMM
                  BWVudm95MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA2twnTr2BTUiW
                  S5jDZMGUZuTeWYT/4AKmZiR/dGMAnY+Xuhr6oBD2k2dJ0lD9484Xkx4T5XVljhyf
                  i3t2malzXDga1JBEOiTISwpPUn4MPpBubqh/7Avq3v+Ko1x9Xx9fV7SC1cH2qkFd
                  n3swVb+G7MCuQ/ElUNcydzOLxCmvnwzRSqdROQpWTsuINeahz+T3WYyfDu8CvFCp
                  20eUoxO69l6YdfZN1JJcu2fo+pafdj1oZvlezXl2MJrfUrHuOmJWclxFaQcf61M8
                  ZGsz4+45i45PcAQERxU7gFtIsj+tl5AZwd9WHdYSja4OxcZtANsuk/B5mjEVmpAP
                  Dg6HWDuNpwIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQAbtVdVRkDkPdWwSjOGgKO/
                  y5bA3xEieR5uxM3GA0uz/aRZWvvxMFZDSBhwl4v3V+QjLc6LcrKBeb2zb/B7JQ1t
                  AfKlfz3JFrg/dw67LgoBCi1ZJrDNZyi9lW+SC84DZbffiE4ch7ZZ8+PRNXzgWMRz
                  27I6rxza8XiiT04XnIUZ1kXh6A3VDXUG3Dl/2oPG1TR/vA/elbIrIRcLzESeaRZD
                  +JVQvOnyjeLzDrgpSc0HKCqBSbzJ1S0RcttQFJfk5OlrXv1Ut6/WWwGDFI0+TKX6
                  rwBcCHDgeGvc8uvy2SPMEOtMeQEjPeaePSIOTua1m/am8po2RspI3+L5/9SMEK1R
                  -----END CERTIFICATE-----
              private_key:
                inline_string: |
                  -----BEGIN PRIVATE KEY-----
                  MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDa3CdOvYFNSJZL
                  mMNkwZRm5N5ZhP/gAqZmJH90YwCdj5e6GvqgEPaTZ0nSUP3jzheTHhPldWWOHJ+L
                  e3aZqXNcOBrUkEQ6JMhLCk9Sfgw+kG5uqH/sC+re/4qjXH1fH19XtILVwfaqQV2f
                  ezBVv4bswK5D8SVQ1zJ3M4vEKa+fDNFKp1E5ClZOy4g15qHP5PdZjJ8O7wK8UKnb
                  R5SjE7r2Xph19k3Ukly7Z+j6lp92PWhm+V7NeXYwmt9Sse46YlZyXEVpBx/rUzxk
                  azPj7jmLjk9wBARHFTuAW0iyP62XkBnB31Yd1hKNrg7Fxm0A2y6T8HmaMRWakA8O
                  DodYO42nAgMBAAECggEBANM+9i3ZWmnXK0Jyg/7Hnk8mj7uGVVfKFwS2K9OSD7EF
                  PWUjz08asHWcl7OJ+1WbwkN9H6U2CD0AQbrnA5XT6gZUHQmY6lHY2P8dR20PPxBQ
                  ZlcnCroy0pRFwXJmvphG9sb38+URH94703sw83mAsWHppQrtQqBh5lMKDNjdh6cS
                  ddiWecima2oM61dJ4CVJq6AOSziIAcrSIJAavki2nntA4Awb5R7wQjnhYsE6y35V
                  PrDd82/pTaSQBm3al+nf0H6/UUb+vvFslPVM/MX+xqbudyDH+j+th/dmE1Gq9i3L
                  wo1Y4hcBtp0g300ShKiB0P99jKOMlabTi1G2WqV2upECgYEA9cr4L7JeOFah7rtE
                  Aok0mMAJ/NNlb3HeAusKKE4yBcFhFgqxeJYPcZsJfrBeSmR+I+ed7RcylRYxuPuB
                  RfMPSW7kqdQtdZWnNMUA9ZhCw/CBPy3xNEUaNK85uOw3DUTCxSrvkUp5s9SRSG2Q
                  IxK5KlU/BUD/qtgFcMZbZii3s58CgYEA4/LcJOBfdXehBC1J1nO4cIdldTkE7h0o
                  jN/7Yge33o0uQQ9wY8WBTIt7XFZlK4GcYODnMHeVAhQaU6OSnpq73LXlOWZ++xdt
                  YYTRhq4T+WJ8YjVgrzhxFByN9xooPe4dBrieLQUK2WAqdLWFIRBMtMbvyy8iyU/d
                  iUyqrI1jKPkCgYAH/vZb9t2Bz6+s6IKp4nTHk1e/1dCy821ZgvPto72U2lmiMe7c
                  EWWnOHfymyI2IVbJLDvC/sIyf2pWrjfiYqnYpbbin3hrHtc1rEL/ulhRr31E5OW3
                  4ZecpyalkWmpENeVOnRYsaeL5hpj1Myfl3hWnDdUoGywzh4/MPTAOgrf2QKBgQDF
                  lnaM4JDeWdwQqtEeOyDdKgAgJFTJsiy8MErPJrGTD/3QF3nsgf8aQq2j1J/NnoPW
                  1hyQPpfDPXm0lk05fhbpsiIIJ3haXmxJ479bZvmZam03E93DBMHAFSBZ2SqYxBYV
                  BWLW01AcLOegUtgbWO2kpeylyy30Im593R70g3o4wQKBgCKcqqxXTLyKX8xTujWG
                  7Yyg6J1WpMPnNnsV3Ig8c572DSDeuKwFFgwVheV7vrUhasEPQVnRcbZJcgoFRB3j
                  5fJeNCNw9/VPmxJvwX0KqwqgWXbFQVTHgBT+RtY7xGc//UcBuSnZkjuCZM5svzSU
                  Ne7M7uD/78+sQNHchTMO2gqG
                  -----END PRIVATE KEY-----

  clusters:
  - name: node-server-http
    per_connection_buffer_limit_bytes: 32768 # 32 KiB
    common_http_protocol_options:
      idle_timeout: 60s
    connect_timeout: 15s
    type: strict_dns
    lb_policy: round_robin
    load_assignment:
      cluster_name: node-server-http-1
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: node-server
                port_value: 8080
  - name: node-server-https
    per_connection_buffer_limit_bytes: 32768 # 32 KiB
    common_http_protocol_options:
      idle_timeout: 60s
    connect_timeout: 15s
    type: strict_dns
    lb_policy: round_robin
    load_assignment:
      cluster_name: node-server-https-1
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: node-server
                port_value: 8443
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext

admin:
  access_log_path: "/dev/null"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8001
layered_runtime:
  layers:
    - name: static_layer_0
      static_layer:
        envoy:
          resource_limits:
            listener:
              example_listener_name:
                connection_limit: 10000
